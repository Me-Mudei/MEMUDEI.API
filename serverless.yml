service: me-mudei-api

package:
  individually: true

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-dotenv-plugin

useDotenv: true

provider:
  name: aws
  region: ${opt:region, 'us-east-1'}
  stage: ${opt:stage, 'local'}
  runtime: nodejs16.x
  memorySize: 512
  vpc:
    securityGroupIds:
      - sg-03763e1decd9b33c1
    subnetIds:
      - subnet-0092e97c895b7d744
      - subnet-03d5de196c98498eb
  environment:
    NODE_ENV: ${self:custom.node-env.${opt:stage}, 'local'}
    SLS_DEBUG: "*"
    LOG_LEVEL: info
    DATABASE_VENDOR: ${env:DATABASE_VENDOR}
    DATABASE_URL: ${env:DATABASE_URL}
    AUTH_VENDOR: ${env:AUTH_VENDOR}
    AUTH_AUDIENCE: ${env:AUTH_AUDIENCE}
    AUTH_ISSUER: ${env:AUTH_ISSUER}
    AUTH_DOMAIN: ${env:AUTH_DOMAIN}
    AUTH_CLIENT_ID: ${env:AUTH_CLIENT_ID}
    CLOUD_VENDOR: ${env:CLOUD_VENDOR}
    CLOUD_ACCESS_KEY_ID: ${env:CLOUD_ACCESS_KEY_ID}
    CLOUD_SECRET_ACCESS_KEY: ${env:CLOUD_SECRET_ACCESS_KEY}
    CLOUD_REGION: ${env:CLOUD_REGION}
    CLOUD_ENDPOINT: ${env:CLOUD_ENDPOINT}
    STORAGE_VENDOR: ${env:STORAGE_VENDOR}
    STORAGE_BUCKET: ${env:STORAGE_BUCKET}
custom:
  node-env:
    prod: "production"
    dev: "development"
    local: "local"
  serverless-offline:
    httpPort: 4000
    stage: local
  serverlessPluginTypescript:
    tsConfigFileLocation: 'tsconfig.json'

functions:
  app:
    handler: src/main.handler
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

  files:
    handler: src/file/index.handler
    events:
      - http:
          path: /files
          method: POST
          cors: true
      - http:
          path: /files/{proxy+}
          method: POST
          cors: true
